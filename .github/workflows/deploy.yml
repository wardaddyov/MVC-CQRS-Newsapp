name: Deploy .NET 9 App to VPS (Password Auth - AVOID IN PRODUCTION)

on:
  push:
    branches:
      - master # Or whatever branch you use for production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: wardaddyov
        password: dckr_pat_vrPMO9bIGvhamVoedlFcFwELDxk

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: wardaddyov/newsapp:latest # Replace 'your-app-name'
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.1 # Using a popular SSH action
      with:
        host: 31.56.227.84
        username: root
        password: July*2002 # *** THIS IS THE CHANGE FOR PASSWORD AUTH ***
        script: |
          echo "Connecting to VPS and deploying..."
          # Log in to Docker Hub on VPS
          docker login -u root -p July*2002
          
          # Stop and remove existing container if it's running
          if [ "$(docker ps -q -f name=newsapp)" ]; then
            echo "Stopping existing container..."
            docker stop newsapp
            echo "Removing existing container..."
            docker rm newsapp
          fi
          
          # Pull the latest Docker image
          echo "Pulling latest Docker image..."
          docker pull wardaddyov/newsapp:latest # Replace 'your-app-name'
          
          # Remove old unused images (optional, helps save space)
          echo "Cleaning up old images..."
          docker image prune -f
          
          # Run the new container
          echo "Running new container..."
          docker run -d \
            --name newsapp \ # Choose a unique name for your container
            -p 80:8080 \ # Map VPS port 80 to container port 8080 (ASP.NET Core default)
            --restart always \ # Automatically restart if container stops
            $wardaddyov/newsapp:latest
          
          echo "Deployment complete!"
